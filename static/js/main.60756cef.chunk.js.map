{"version":3,"sources":["tempList.js","components/Recipe.js","components/RecipeSearch.js","components/RecipeList.js","tempDetails.js","components/RecipeDetails.js","App.js","serviceWorker.js","index.js"],"names":["recipes","recipe_id","image_url","title","publisher","source_url","Recipe","_this$props$recipe","this","props","recipe","handleDetails","react_default","a","createElement","react","className","src","style","height","alt","type","onClick","href","target","rel","Component","RecipeSearch","_this$props","value","handleSubmit","handleChange","Fragment","onSubmit","htmlFor","name","placeholder","onChange","RecipeList","error","RecipeSearch_RecipeSearch","map","Recipe_Recipe","key","f2f_url","ingredients","publisher_url","RecipeDetails","state","id","url","fetch","data","json","jsonData","setState","console","log","_context","t0","_this$state$recipe","handleIndex","item","index","App","base_url","details_id","pageIndex","search","query","displayPage","RecipeList_RecipeList","_this","RecipeDetails_RecipeDetails","e","preventDefault","_this$state","concat","getRecipes","length","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60756cef.chunk.js","sourcesContent":["export const recipes = [\r\n  {\r\n    recipe_id: 35382,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 35383,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 35384,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  }\r\n];\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nexport default class Recipe extends Component {\r\n    render() {\r\n        const {\r\n            image_url,\r\n            title,\r\n            source_url,\r\n            publisher,\r\n            recipe_id\r\n        } = this.props.recipe;\r\n\r\n        const { handleDetails } = this.props;\r\n\r\n        return (\r\n            // Card element for each recipe on the homepage\r\n            <Fragment>\r\n                <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\r\n                    <div className=\"card\">\r\n                        <img className=\"img-card-top\" src={image_url} style={{height:\"14rem\"}} alt=\"recipe\"/> \r\n                        <div className=\"card-body text-capitalized\">\r\n                            <h6>{title}</h6>\r\n                            <h6 className=\"text-warning text-slanted\">\r\n                                Provided by {publisher}\r\n                            </h6>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                            <button\r\n                                className=\"btn btn-primary text-capitalize\"\r\n                                type=\"button\"\r\n                                onClick={() => handleDetails(0, recipe_id)}\r\n                            >\r\n                                Details\r\n                            </button>\r\n                            <a href={source_url} \r\n                                className=\"btn btn-succes mx-2 text-capitalize\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\">\r\n                                recipe url</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class RecipeSearch extends Component {\r\n    render() {\r\n        const { value, handleSubmit, handleChange } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-10 mx-auto col-md-8 mt-5 text-center\">\r\n                            <h1 className=\"text-slanted text-capitalize\">\r\n                                search for a recipe with <strong className=\"text-danger\">Food2Fork</strong>\r\n                            </h1>\r\n                            <form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                                <label htmlFor=\"search\" className=\"text-capitalize\">\r\n                                    type recipes separated by comma\r\n                                </label>\r\n                                <div className=\"input-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"search\"\r\n                                        placeholder=\"chicken, onions, carrots\"\r\n                                        className=\"form-control\"\r\n                                        value={value}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button type=\"submit\" className=\"input-group-text bg-primary text-white\">\r\n                                            <i className=\"fas fa-search\">Search</i>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Recipe from './Recipe';\r\nimport RecipeSearch from './RecipeSearch';\r\n\r\nexport default class RecipeList extends Component {\r\n    render() {\r\n        const { recipes, handleDetails, handleSubmit, handleChange, value, error } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <RecipeSearch value={value} handleChange={handleChange} handleSubmit={handleSubmit} />\r\n\r\n                <div className=\"container my-5\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-10 mx-auto col-md-6 text-center text-uppercase mb-3\"></div>\r\n                        <h1 className=\"text-slanted\">recipe list</h1>\r\n                    </div>\r\n\r\n                    {/* it renders the api data */}\r\n                    <div className=\"row\">\r\n                    {error ? <h1 className=\"text-danger text-center\">{error}</h1> \r\n                    : recipes.map(recipe => {\r\n                            return (\r\n                                <Recipe\r\n                                    key={recipe.recipe_id}\r\n                                    recipe={recipe}\r\n                                    handleDetails={() => handleDetails(0, recipe.recipe_id)}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","export const recipe = {\r\n  f2f_url: \"http://food2fork.com/view/35382\",\r\n  image_url:\r\n    \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n  ingredients: [\r\n    \"2 jalapeno peppers, cut in half lengthwise and seeded\",\r\n    \"2 slices sour dough bread\",\r\n    \"1 tablespoon butter, room temperature\",\r\n    \"2 tablespoons cream cheese, room temperature\",\r\n    \"1/2 cup jack and cheddar cheese, shredded\",\r\n    \"1 tablespoon tortilla chips, crumbled\"\r\n  ],\r\n  publisher: \"Closet Cooking\",\r\n  publisher_url: \"http://closetcooking.com\",\r\n  source_url:\r\n    \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\r\n  title: \"Jalapeno Popper Grilled Cheese Sandwich\"\r\n};\r\n","import React, { Component } from 'react';\r\nimport { recipe } from '../tempDetails';\r\n\r\nexport default class RecipeDetails extends Component {\r\n    state = {\r\n        recipe: recipe\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const id = this.props.id;\r\n        const url = `https://www.food2fork.com/api/get?key=66caac779e3d2dd687059e587c0c227b&rId=${id}`;\r\n\r\n        // fetching the api data\r\n        try {\r\n            const data = await fetch(url);\r\n            const jsonData = await data.json();\r\n            this.setState((state, props) => {\r\n                return {\r\n                    recipe: jsonData.recipe\r\n                }\r\n            }, () => {})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            image_url,\r\n            publisher,\r\n            publisher_url,\r\n            source_url,\r\n            title,\r\n            ingredients\r\n        } = this.state.recipe\r\n\r\n        const { handleIndex } = this.props\r\n\r\n        return (\r\n            // creating the details for each recipe and injecting the api data\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-10 mx-auto col-md-6 my-3\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-warning mb-5 text-capitalize\"\r\n                                onClick={() => handleIndex(1)}\r\n                            >\r\n                                Back to recipe list\r\n                            </button>\r\n                            <img src={image_url} className=\"d-block w-100\" alt=\"recipe\" />\r\n                        </div>\r\n                        <div className=\"col-10 mx-auto col-md-6 my-3\">\r\n                            <h6 className=\"text-uppercase\">{title}</h6>\r\n                            <h6 className=\"text-warning text-capitalize text-slanted\">\r\n                                provided by {publisher}\r\n                            </h6>\r\n                            <a \r\n                                href={publisher_url}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"btn btn-primary mt-2 text-capitalize\"\r\n                            >\r\n                                publisher webpage\r\n                            </a>\r\n                            <a\r\n                                href={source_url}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"btn btn-success mx-3 mt-2 text-capitalize\"\r\n                            >\r\n                                source url\r\n                            </a>\r\n                            <ul className=\"list-group mt-4\">\r\n                                <h2 className=\"mt-3 mb-4\">Ingredients</h2>\r\n                                {\r\n                                    ingredients.map((item, index) => {\r\n                                        return (\r\n                                            <li key={index} className=\"list-group-item text-slanted\">\r\n                                                {item}\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './styles/App.scss';\r\nimport 'normalize.css';\r\nimport { recipes } from './tempList';\r\nimport RecipeList from './components/RecipeList';\r\nimport RecipeDetails from './components/RecipeDetails';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    recipes: recipes,\r\n    url: \"https://www.food2fork.com/api/search?key=66caac779e3d2dd687059e587c0c227b\",\r\n    base_url: \"https://www.food2fork.com/api/search?key=66caac779e3d2dd687059e587c0c227b\",\r\n    details_id: 35382,\r\n    pageIndex: 1,\r\n    search: '',\r\n    query: '&q='\r\n  }\r\n\r\n  // fetching the api\r\n  async getRecipes(){\r\n    try{\r\n      const data = await fetch(this.state.url);\r\n      const jsonData = await data.json();\r\n\r\n      if(jsonData.recipes.length === 0){\r\n        return {\r\n          error: 'sorry, but your search did not retun any results'\r\n        }\r\n      } else{\r\n        this.setState(() => {\r\n          return {\r\n            recipes: jsonData.recipes\r\n          }\r\n        })\r\n      }\r\n    } catch(error){\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.getRecipes();\r\n  }\r\n\r\n  displayPage = (index) => {\r\n    switch(index){\r\n      default:\r\n      case 1:\r\n        return ( <RecipeList\r\n                    recipes={this.state.recipes}\r\n                    handleDetails={this.handleDetails}\r\n                    value={this.state.search}\r\n                    handleChange={this.handleChange}\r\n                    handleSubmit={this.handleSubmit}\r\n                    error={this.state.error} /> )\r\n      case 0:\r\n        return ( <RecipeDetails id={this.state.details_id} handleIndex={this.handleIndex} /> )\r\n    }\r\n  }\r\n\r\n  handleIndex = (index) => {\r\n    this.setState({\r\n      pageIndex: index\r\n    })\r\n  }\r\n\r\n  handleDetails = (index, id) => {\r\n    this.setState({\r\n      pageIndex: index,\r\n      details_id: id\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      search: e.target.value\r\n    }, () => {\r\n      console.log(this.state.search)\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const { base_url, query, search } = this.state;\r\n\r\n    this.setState(() => {\r\n      return {\r\n        url: `${base_url}${query}${search}`,\r\n        search: ''\r\n      }\r\n    }, () => {\r\n      this.getRecipes()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    // it renders the homepage or the recipe details\r\n    return(\r\n      <React.Fragment>\r\n        {this.displayPage(this.state.pageIndex)}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/App.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}